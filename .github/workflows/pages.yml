name: pages-visualizations

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'data.yml'
      - 'visualize_data.py'
      - '.github/workflows/pages.yml'
  schedule:
    - cron: '15 0 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install visualization dependencies
        run: |
          pip install pandas pyyaml matplotlib seaborn numpy scipy
      - name: Generate additional dashboards (if present)
        run: |
          if [ -f economic_ultrathink_dashboard.py ]; then python economic_ultrathink_dashboard.py || true; fi
          if [ -f economic_structure_viz.py ]; then python economic_structure_viz.py || true; fi
      - name: Ensure data present
        run: |
          python - <<'PY'
          import os, sys
          assert os.path.exists('data.yml'), 'data.yml not found'
          PY
      - name: Generate visualizations
        run: |
          python visualize_data.py
      - name: Build static site
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          mkdir -p public
          cp -v *.png public/ || true
          DATA_URL="https://raw.githubusercontent.com/$GITHUB_REPOSITORY/main/data.yml"
          cat > public/index.html <<HTML
          <!doctype html>
          <html lang="en">
          <meta charset="utf-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <title>Economic Visualizations</title>
          <style>
            body { font-family: system-ui, sans-serif; margin: 2rem; }
            img { max-width: 100%; height: auto; border: 1px solid #ddd; margin: 0.75rem 0; border-radius: 6px; }
            h1 { margin-bottom: 0.5rem; }
            .grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 1rem; }
            .card { padding: 0.75rem; border: 1px solid #eee; border-radius: 10px; background: #fafafa; box-shadow: 0 1px 2px rgba(0,0,0,0.04); }
            .meta { font-size: 0.9rem; color: #555; margin-bottom: 1rem; }
            .actions a { margin-right: 0.75rem; font-size: 0.9rem; }
          </style>
          <body>
            <h1>Economic Visualizations</h1>
            <p class="meta">Generated by <code>visualize_data.py</code> from <code>data.yml</code>. <a href="$DATA_URL">View data.yml</a></p>
            <div class="grid">
              <!-- IMAGE_CARDS -->
            </div>
            <script>
              const files = [
                'economic_indicators_overview.png',
                'correlation_analysis.png',
                'economic_relationships.png',
                'performance_dashboard.png',
                'volatility_analysis.png',
                'm2_area.png',
                'asset_cumulative_analysis.png',
                'economic_regime_analysis.png',
                'economic_ultrathink_dashboard.png',
                'economic_structure_viz.png',
                'stock_flow_framework.png'
              ];
              const titles = {
                'economic_indicators_overview.png': 'Economic Indicators Overview',
                'correlation_analysis.png': 'Correlation Analysis',
                'economic_relationships.png': 'Economic Relationships',
                'performance_dashboard.png': 'Performance Dashboard',
                'volatility_analysis.png': 'Volatility Analysis',
                'm2_area.png': 'M2 Money Supply (Area)',
                'asset_cumulative_analysis.png': 'Asset Cumulative Analysis',
                'economic_regime_analysis.png': 'Economic Regime Analysis',
                'economic_ultrathink_dashboard.png': 'Economic Ultrathink Dashboard',
                'economic_structure_viz.png': 'Economic Structure Visualization',
                'stock_flow_framework.png': 'Stock-Flow Framework'
              };
              const grid = document.querySelector('.grid');
              files.forEach(f => {
                const img = document.createElement('img');
                img.src = f; img.alt = f;
                const card = document.createElement('div');
                card.className = 'card';
                const h = document.createElement('h3');
                h.textContent = titles[f] || f.replace(/_/g,' ').replace(/\.png$/,'')
                  .replace(/\b\w/g, c => c.toUpperCase());
                const links = document.createElement('div');
                links.className = 'actions';
                const aView = document.createElement('a');
                aView.href = f; aView.textContent = 'Open full size'; aView.target = '_blank';
                const aDownload = document.createElement('a');
                aDownload.href = f; aDownload.download = f; aDownload.textContent = 'Download PNG';
                links.appendChild(aView);
                links.appendChild(aDownload);
                card.appendChild(h);
                card.appendChild(links);
                card.appendChild(img);
                grid.appendChild(card);
              });
            </script>
          </body>
          </html>
HTML
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
